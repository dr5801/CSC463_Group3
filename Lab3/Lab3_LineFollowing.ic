/**
 * Authors: Drew Rife, Brett Pare, Michael Pulliam
 * Professor: Dr. Girard
 * CSC 463
 * Lab 3: Use two light sensors to follow the line, while using fuzzy logic
 */

#define LEFT_MOTOR 0
#define RIGHT_MOTOR 1
#define LEFT_SENSOR 5
#define RIGHT_SENSOR 6
#define DEFAULT_MOTOR_SPEED 50.0
#define MOTOR_RATIO 50.0

float sensorValues[2];
float motorSpeeds[2];
float difference;
float differencePercentage;

/**
 * Wait for the start button to be pressed before running the motor control loop 
 */
void waitForStart()
{
    printf("Press the start button.\n");
    
    /* wait for the user to press the start button */
    while(!start_button());
    printf("\n");
}

/**
 * Obtain values from the light sensors and save the values in an array 
 */
void getSensorValues()
{
    sensorValues[0] = (float)analog(LEFT_SENSOR);
    sensorValues[1] = (float)analog(RIGHT_SENSOR);
}

/**
 * Find the difference between the sensor values
 */
void calculateDifference()
{
    float max_sensor_reading = 255.0;
    difference = sensorValues[0]-sensorValues[1];
    differencePercentage = difference / max_sensor_reading;
}

/**
 * Calculate the resulting motor values
 */
void calculateMotorSpeeds()
{
    if(difference > 0.0) 
    {
        /* if the left sensor is reading a higher value than the right, calculate the speed for the left motor */
        motorSpeeds[LEFT_MOTOR] = DEFAULT_MOTOR_SPEED - differencePercentage * DEFAULT_MOTOR_SPEED * MOTOR_RATIO;
        motorSpeeds[RIGHT_MOTOR] = DEFAULT_MOTOR_SPEED;
    }
    else if(difference < 0.0) //if the opposite is true
    {
        /* if the left sensor is reading a lower value than the right, calculate the speed for the right motor */
        motorSpeeds[RIGHT_MOTOR] = DEFAULT_MOTOR_SPEED + differencePercentage * DEFAULT_MOTOR_SPEED * MOTOR_RATIO;
        motorSpeeds[LEFT_MOTOR] = DEFAULT_MOTOR_SPEED;
    }
    else
    {
        /* on the black line, keep going straight */
        motorSpeeds[LEFT_MOTOR] = DEFAULT_MOTOR_SPEED;
        motorSpeeds[RIGHT_MOTOR] = DEFAULT_MOTOR_SPEED;
    }
}

/**
 * Controls the motors by:
 * 1. getting the light sensor values 
 * 2. calculating the difference between the two values
 * 3. calculating the motor speeds based on the difference
 * 4. setting the motor speeds to the newly calculated speeds they should be powered at
 */
void motorControl()
{
    getSensorValues();
    calculateDifference();
    calculateMotorSpeeds();
    
    motor(LEFT_MOTOR,(int)motorSpeeds[0]);
    motor(RIGHT_MOTOR,(int)motorSpeeds[1]);
}

/**
 * main method to run the robot 
 */
int main(void) 
{     
    waitForStart();
    
    while(!stop_button())
    {
        motorControl();
    }
    
    alloff();
    return 0;
}
