#define RIGHT_MOTOR 2
#define LEFT_MOTOR 0
#define DEFAULT_SPEED 50
#define RIGHT 2
#define LEFT 0

int rightMotorSpeed = DEFAULT_SPEED;
int leftMotorSpeed = DEFAULT_SPEED;
int lastTurn = 0;
int foundTape = 1;

/* returns the initial average of light input before starting */
int getInitialAverage()
{    
    int i;
    int average = 0;
    for( i = 0; i < 10; i++ ) {
        average += analog(6);
    }
    
    return (average/=10);
}

int checkSensorReading(int average)
{
    int currentReading = analog(6);
    float luminousThreshold = .20;
    int significantDifference = ((float)(average - currentReading) > ((float)average * luminousThreshold));
    printf("checkSensorReading");
    return significantDifference;
}

/* Checks the sensor readings and turn if need be */
void initiateTurnSequence(int average)
{
    //int significantDifference = checkSensorReading(average);
    int currentReading = analog(6);
    /* if the difference is greater than 20% try turning */
    //if(significantDifference) {
    printf("initiateTurnSequence\n");    
    alloff();
        
    /* check last turn and turn the opposite direction */
    if(lastTurn == LEFT) {
        turn(RIGHT, average);
        if( foundTape ) {
            lastTurn = RIGHT;
        }
        
            /* if after turning the reading is worse, undo the turn */
        if( analog(6) < currentReading ) {
            resetPosition(RIGHT, average);
            lastTurn = LEFT;
        }            
    }
    else {
        turn(LEFT, average);
        if( foundTape ) {
            lastTurn = LEFT;
        }
           
        /* if after turning the reading is worse, undo the turn */
        if( analog(6) < currentReading ) {
            resetPosition(LEFT, average);
            lastTurn = RIGHT;
        }
    }   
}

void resetPosition(int direction, int average)
{
    int significantDifference = 1;
    printf("resetPosition\n");
    while( significantDifference ) {
        motor(direction, 80);
        motor(!direction, -80);
        significantDifference = checkSensorReading(average);
    }
}

void turn(int direction, int average)
{
    int initialTime = (int)seconds();
    int elapsedTime;
    int significantDifference = 1;
    printf("turn\n");
    while( significantDifference && ((initialTime + 1) >= elapsedTime) ) {
        motor(direction, -55);
        motor(!direction, 55);
        elapsedTime = (int)seconds();
        significantDifference = checkSensorReading(average);
    }
    
    if( significantDifference ) {
        foundTape = 0;
    }
}

/* moves the robot */
void move()
{
    printf("move\n");
    motor(LEFT_MOTOR, 50);
    motor(RIGHT_MOTOR, 50);
}

void main() 
{   
    int average;
    int initialTime;
    int elapsedTime;
    /* Starting prompt for user */
    printf("Put robot on tape. ");
    printf("Press start.\n"); 
    
    /* waits for start button to be pressed */
    while(start_button() == 0);
    
    average = getInitialAverage();
    printf("Average: %d\n", average);
    
    
    while(1) {
        //move();
        if( checkSensorReading(average) ) {
            initiateTurnSequence(average);
        } else {
            move();
        }
    }
}
