/**
 * Authors: Drew Rife, Brett Pare, Michael Pulliam
 * Professor: Dr. Girard
 * CSC 463
 * Lab 2: Use two touch sensors to navigate out of a maze
*/

#define RIGHT_MOTOR 1
#define LEFT_MOTOR 0
#define RIGHT_DIRECTION 1
#define LEFT_DIRECTION 0
#define RIGHT_SENSOR 15
#define LEFT_SENSOR 10

int lastTurn = LEFT_DIRECTION;

void turn(int direction)
{
    float initialTime;
    float elapsedTime;
    initialTime = seconds();
    while(((initialTime+2.1) > elapsedTime)) {
        bk(direction);
        fd(!direction);
        elapsedTime = seconds();
    }
}

/* moves the robot forward */
void moveForward()
{
    motor(LEFT_MOTOR, 20);
    motor(RIGHT_MOTOR, 20);
}

/* moves the robot forward */
void moveBackward(float timeToRun)
{
    float initialTime;
    float timeElapsed;
    
    initialTime = seconds();
    while(initialTime+timeToRun > timeElapsed) {
        motor(LEFT_MOTOR, -30);
        motor(RIGHT_MOTOR, -30);
        timeElapsed = seconds();
      }
    
}

void waitForOtherSensor(int sensor) 
{
    if( sensor == RIGHT_SENSOR ) {
        off(LEFT_MOTOR);
        motor(RIGHT_MOTOR, 50);
    }
    else {
        off(RIGHT_MOTOR);
        motor(LEFT_MOTOR, 50);
    }
    
    while( !digital(sensor) );
}

/**
 * main method to run the robot 
 */
void main() 
{   
    //int average;
    //float currentReading;
    float initialTime;
    float elapsedTime;
    
    /* waits for start button to be pressed */
    while( !start_button() );
    
    while( !stop_button() ) {
        moveForward();
        
        while( !digital(LEFT_SENSOR) && !digital(RIGHT_SENSOR) );
        
        if( digital(LEFT_SENSOR) )
          waitForOtherSensor(RIGHT_SENSOR);
        else
          waitForOtherSensor(LEFT_SENSOR);
        
        moveBackward(2.0);
        
        turn(LEFT_DIRECTION);
        
        moveForward();
        
        while( !digital(LEFT_SENSOR) && !digital(RIGHT_SENSOR) );
        
        if( digital(LEFT_SENSOR) )
          waitForOtherSensor(RIGHT_SENSOR);
        else
          waitForOtherSensor(LEFT_SENSOR);
        
        moveBackward(2.0);
        
        turn(LEFT_DIRECTION);
        turn(LEFT_DIRECTION);
    }
    
    alloff();
}
