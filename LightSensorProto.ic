#define DEFAULT_SPEED 50

typedef enum {
    LEFT_MOTOR = 0,
    RIGHT_MOTOR = 2
} MOTORS;

typedef enum {
    LEFT = 0,
    RIGHT = 1
} DIRECTION;

int rightMotorSpeed = DEFAULT_SPEED;
int leftMotorSpeed = DEFAULT_SPEED;
int lastTurn = 0;

/* returns the initial average of light input before starting */
int getInitialAverage()
{
    int i;
    int average = 0;
    for( i = 0; i < 10; i++ ) {
        average += analog(6);
    }

    return (average/=10);
}

/* checks the sensor readings and turn if need be */
void checkSensorReading(int average) 
{
    int currentReading = analog(6);
    float luminousThreshold = 0.2;
    int significantDifference = ((float)(average - currentReading) > (average * luminousThreshold);
    
    if( significantDifference ) {

        alloff();

        /* check last turn and turn the opposite direction */
	if( lastTurn = LEFT ) {
	    
	    turnRight();
	    lastTurn = RIGHT;
	    /* if after turning the reading is worse, undo the turn */
	    if( analog(6) < currentReading ) {
		turnLeft();
	    }
	}
	else {
	    turnLeft();
	    lastTurn = LEFT;
	    /* if after turning the reading is worse, undo the turn */
	    if( analog(6) < currentReading ) {
		turnRight();
	    }
	}
    }
}

void turnRight() {}
void turnLeft() {}

void move()
{
    motor(LEFT_MOTOR, 50);
    motor(RIGHT_MOTOR, 50);
}

void main()
{
    int average;
    /* starting prompt for user */
    printf("Put robot on tape. ");
    printf("Press start.\n");
  
    /* waits for start button to be pressed */
    while( !start_button() );

    average = getInitialAverage();
    printf("Average: %d\n", average);

    while(1) {
        checkSensorReading(average);
    }
}
